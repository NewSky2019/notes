class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        if grid==[]:
            return 0
        
        numRows=len(grid)
        numCols=len(grid[0])
        
        if numRows==1:
            upperMatrix=[]
        else:
            upperMatrix=grid[:numRows-1]
            
        if numCols==1:
            leftMatrix=[]
        else:
            leftMatrix=[]
            
            for i in range(numRows):
                thisRow=[]
                for j in range(numCols-1):
                    thisRow.append(grid[i][j])
                    
                leftMatrix.append(thisRow)
        
        
        
        return min(self.minPathSum(upperMatrix),self.minPathSum(leftMatrix))+grid[numRows-1][numCols-1]
        
     
Input
[[1,3,1],[1,5,1],[4,2,1]]
Output
3
Expected
7
