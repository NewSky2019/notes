1. wrong answer:

 class Solution(object):
    def merge(self, nums1, m, nums2, n):
        
        i=m-1     # the wrong is here, when m==0, m-1=-1, -1 become the index of the last element
        j=n-1
        
        ind=m+n-1
        while ind>=m:
            if nums1[i]>=nums2[j]:
                nums1[ind]=nums1[i]
                i=i-1
                ind=ind-1
            else:
                nums1[ind]=nums2[j]
                j=j-1
                ind=ind-1
                
        
        if j>=0:
            while j>=0:
                nums1[ind]=nums2[j]
                j=j-1
                ind=ind-1
                
                
[0,0,0,0,0]
0
[1,2,3,4,5]
5

result:[5,1,2,3,4]






2. wrong answer

class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """
        if m==0:
            for i in range(n):
                nums1[i]=nums2[i]
                
        elif n==0:
            return
        else:
            ind=m+n-1
            i=m-1
            j=n-1
            while ind>=m:
                if nums1[i]>=nums2[j]:
                    nums1[ind]=nums1[i]
                    i=i-1
                    ind=ind-1
                else:
                    nums1[ind]=nums2[j]
                    j=j-1
                    ind=ind-1
                    
            
            if j>=0:
                while j>=0:
                    nums1[ind]=nums2[j]
                    ind=ind-1
                    j=j-1
                    
[4,0,0,0,0,0]
1
[1,2,3,5,6]
5

result:[3,5,6,4,1,2]



3. wrong answer

class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """
        nums1_copy=nums1[:m]
        nums1=[]  # if so, num1 never change. if write as nums1[:]=[], will be correct
        
        i=0
        j=0
        while i<=m-1 and j<=n-1:
            if nums1_copy[i]<=nums2[j]:
                nums1.append(nums1_copy[i])
                i=i+1
            else:
                nums1.append(nums2[j])
                j=j+1
                
        if i<=m-1:
            for t in range(i,m):
                nums1.append(nums1_copy[t])
        else:
            for t in range(j,n):
                nums1.append(nums2[t])
